apply plugin: 'java'

defaultTasks 'assemble'

repositories {
    mavenCentral()
}

dependencies {
    runtime 'org.hornetq:hornetq-core-client:2.2.5.Final'
    compile 'org.hornetq:hornetq-jms-client:2.2.5.Final'
    compile 'org.jboss.ejb3:jboss-ejb3-ext-api:2.1.0'
    compile 'org.jboss.spec.javax.ejb:jboss-ejb-api_3.1_spec:1.0.2.Final'
    compile 'org.jboss.javaee:jboss-jms-api-1.1_spec:5.0.2.GA'
    compile 'org.jboss.logging:jboss-logging-spi:2.1.2.GA'
    compile 'org.jboss.netty:netty:3.2.3.Final'
    compile 'jboss:jnp-client:4.0.2'
    testCompile 'junit:junit:4.+'
}

def outputDir = file("${buildDir}/unpacked")
def zipFile = file("download/jboss-as-distribution-6.1.0.Final.zip")

task downloadJBoss(type: Download) {
    outputs.file zipFile
    sourceUrl 'http://download.jboss.org/jbossas/6.1/jboss-as-distribution-6.1.0.Final.zip'
    target zipFile
}

task unzip(type: Copy, dependsOn: downloadJBoss) {
    inputs.file zipFile
    outputs.dir outputDir
    from zipTree(zipFile)
    into outputDir
}

task createServer1(type: Copy, dependsOn: unzip) {
    def defaultConfDir = file("${outputDir}/jboss-6.1.0.Final/server/default")
    from defaultConfDir
    into file("${outputDir}/jboss-6.1.0.Final/server/server1")
}

task createServer2(type: Copy, dependsOn: unzip) {
    def defaultConfDir = file("${outputDir}/jboss-6.1.0.Final/server/default")
    from defaultConfDir
    into file("${outputDir}/jboss-6.1.0.Final/server/server2")
}

task setupServer1(type: Copy, dependsOn: createServer1) {
    println ("setupServer1")
    from file("config/server1")
    into file("${outputDir}/jboss-6.1.0.Final/server/server1")
}

task setupServer2 << {
    println ("setupServer2")
    copy {
       from file("config/server2")
       into file("${outputDir}/jboss-6.1.0.Final/server/server2")
    }
    copy {
        from file("simplemdb/build/libs/simplemdb.jar")
        into file("${outputDir}/jboss-6.1.0.Final/server/server2/deploy")
    }

}
setupServer2.dependsOn "createServer2"
setupServer2.dependsOn ":simplemdb:assemble"

// Add dependency to asemble
assemble.dependsOn setupServer1
assemble.dependsOn setupServer2

task startServer1(type:Exec) {
    description "Starts server 1 - which is the JMS broker"
    workingDir "${outputDir}/jboss-6.1.0.Final/bin"
    commandLine './run.sh' 
    args '-b', '127.0.1.1', '-c', 'server1'
}


task startServer2(type:Exec) {
    description "Starts server 2 - which is the JMS client"
    workingDir "${outputDir}/jboss-6.1.0.Final/bin"
    commandLine './run.sh' 
    args '-b', '127.0.1.2', '-c', 'server2'
}

task postMessages << {
   javaexec {
       main = 'SimpleProducer'
       classpath sourceSets.main.runtimeClasspath
       args 'queue/testqueue', '3'
       systemProperty 'java.naming.factory.initial','org.jnp.interfaces.NamingContextFactory'
       systemProperty 'java.naming.provider.url','jnp://127.0.1.1:1099'
       systemProperty 'java.naming.factory.url.pkgs','org.jboss.naming:org.jnp.interfaces' 
    }
   
}

task readMessages(type: JavaExec) {
    main = 'SimpleAsynchConsumer'
    classpath sourceSets.main.runtimeClasspath
    systemProperty 'java.naming.factory.initial','org.jnp.interfaces.NamingContextFactory'
    systemProperty 'java.naming.provider.url','jnp://127.0.1.1:1099'
    systemProperty 'java.naming.factory.url.pkgs','org.jboss.naming:org.jnp.interfaces' 
    args 'queue/testqueue'
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

class Download extends DefaultTask {
    @Input
    String sourceUrl

    @OutputFile
    File target

    @TaskAction
    void download() {
       ant.get(src: sourceUrl, dest: target, verbose: 'on', skipexisting: 'true')
    }
}
